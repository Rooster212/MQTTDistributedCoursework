//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.MQTTWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MQTTWcfService.IDirectoryService")]
    public interface IDirectoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryService/GetServers", ReplyAction="http://tempuri.org/IDirectoryService/GetServersResponse")]
        string[] GetServers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryService/GetServers", ReplyAction="http://tempuri.org/IDirectoryService/GetServersResponse")]
        System.Threading.Tasks.Task<string[]> GetServersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryService/RegisterServer", ReplyAction="http://tempuri.org/IDirectoryService/RegisterServerResponse")]
        string RegisterServer(string studentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryService/RegisterServer", ReplyAction="http://tempuri.org/IDirectoryService/RegisterServerResponse")]
        System.Threading.Tasks.Task<string> RegisterServerAsync(string studentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryService/UnregisterServer", ReplyAction="http://tempuri.org/IDirectoryService/UnregisterServerResponse")]
        bool UnregisterServer(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDirectoryService/UnregisterServer", ReplyAction="http://tempuri.org/IDirectoryService/UnregisterServerResponse")]
        System.Threading.Tasks.Task<bool> UnregisterServerAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDirectoryServiceChannel : Client.MQTTWcfService.IDirectoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirectoryServiceClient : System.ServiceModel.ClientBase<Client.MQTTWcfService.IDirectoryService>, Client.MQTTWcfService.IDirectoryService {
        
        public DirectoryServiceClient() {
        }
        
        public DirectoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DirectoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetServers() {
            return base.Channel.GetServers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetServersAsync() {
            return base.Channel.GetServersAsync();
        }
        
        public string RegisterServer(string studentNumber) {
            return base.Channel.RegisterServer(studentNumber);
        }
        
        public System.Threading.Tasks.Task<string> RegisterServerAsync(string studentNumber) {
            return base.Channel.RegisterServerAsync(studentNumber);
        }
        
        public bool UnregisterServer(string token) {
            return base.Channel.UnregisterServer(token);
        }
        
        public System.Threading.Tasks.Task<bool> UnregisterServerAsync(string token) {
            return base.Channel.UnregisterServerAsync(token);
        }
    }
}
